○ 

	<Reference> 

○ React Introduction

	<Reference> 
	https://www.w3schools.com/react/react_intro.asp

	React creates a VIRTUAL DOM in memory.
	

	Instead of manipulating the browser's DOM directly, React creates a virtual DOM in memory, 
	where it does all the necessary manipulating, before making the changes in the browser DOM.

	React only changes what needs to be changed!



○ React Study 참고 사이트
	<Reference> 
	https://www.w3schools.com/react/default.asp


○ [초보자] React 설치부터 배포까지의 과정을 정리

	<Reference> 
	https://dev.classmethod.jp/articles/the-process-from-installing-react-to-distributing-it/



○ React

	<Reference> 
	스무디 한 잔 마시며 끝내는 리액트+TDD / 김정현/ 2021
	https://itworldyo.tistory.com/124
	https://digiconfactory.tistory.com/entry/CHOCOLATEY-%EC%9C%88%EB%8F%84%EC%9A%B0-%ED%8C%A8%ED%82%A4%EC%A7%80-%EB%A7%A4%EB%8B%88%EC%A0%80-%EC%84%A4%EC%B9%98
	https://ssungkang.tistory.com/entry/React-React-%EC%8B%9C%EC%9E%91%ED%95%98%EA%B8%B0-create-react-app


	- 리액트는 자바스크립트 언어를 기반으로 동작하는 라이브러리이다.
	- 리액트의 특징
		1.가상 돔
			reflow, repaint를 최소화 하여 성능 최적화.
		2.단방향 데이터 바인딩
			장점
			양방향 데이터 바인딩의 문제점과 복잡성을 피함.
			데이터의 변화에 따른 성능 저하 없이 DOM 객체 갱신 가능
			데이터 흐름이 단방향 이므로, 코드를 이해하기 쉽고, 데이터의 추적과
				디버깅이 쉽다.
			더 확실하게 데이터를 추적할 수 있다
			단점
			변화를 감지하고 화면을 업데이트 하는 코드를 매번 작성해야 함

			양방향 데이터 바인딩
			장점:자동으로 데이터를 동기화
			단점:데이터 하나에 두개의 Watcher가 사용되기 때문에,
					오버 스펙일 경우가 발생 할 수 있다.
				수많은 Watcher에 의해 성능저하가 발생할 수 있다.
				변화에 따라 DOM 객체 전체를 랜더링해주거나 데이터를 바꿔주므로
					성능이 감소되는 경우가 있다.
		
			
		3.JSX
			자바스크립트와 HTML을 통시에 사용하며, HTML에 자바스크립트 변수들을
			바로 사용할 수 있는 일종의 템플릿 언어(Template language)
		4.선언형 프로그래밍
			명령형 프로그래밍 VS 선언형 프로그래밍
		5.컴포넌트 기반

	- 리액트 개발 환경
		1.CHOCOLATEY 설치
			초콜라티는 리눅스같은 명령어 방식의 패키지 매니저를 윈도우로 구현한 것
	
			https://chocolatey.org/install

			초콜라티를 GUI로 사용하고 싶은 경우,
				choco install chocolateygui

			초콜라티 매니저에서 다운받은 패키지는  ChocolateyInstall\lib 에 저장

			choco -v  : 버전확인 -> 0.12.1
		2.노드 설치
			node --version	-> v17.7.1
			npm --version	-> 8.5.2


	- 리액트를 시작하는 방법
		1.스크립트 태그 추가
		2.Webpack과 Babel을 설정하여 개발
		3.create-react-app
		4.Next.js 프레임워크
q
	- create-react-app

		<Reference> 	
		https://ssungkang.tistory.com/entry/React-React-%EC%8B%9C%EC%9E%91%ED%95%98%EA%B8%B0-create-react-app

		1. npm install -g create-react-app
		2. npx create-react-app -version	-> 5.0.0
		3. npx create-react-app my-app	//리액트 프로젝트 생성
		4. 리액트 프로젝트 실행
			cd my-app
			npm start

	- 리액트의 테스트 -Jest
		: 자바스크립트 테스트 프레임 워크		
		Jest의 장점
			1) 제로 설정
			2) 스냅샷
			3) 모의 객체
			4) 테스트 코드의 분리
			5) 간단한 API


		cd jest-test
		npm init
		npm install --save-dev jest
		
		
		Matcher
		1) toEqual	: 오브젝트를 테스트 할때는 toEqual 사용
		2) toBeTruthy, toBeFalsy	: 참, 거짓
		3) toContain	: 배열에 특정값이 포함되어 있는지 확인

		Jest Expect : https://jestjs.io/docs/en/expect

		코드 커버리지
		npx jest --coverage

		Jest : https://jestjs.io/docs/en/getting-started/

	- 리액트 테스트 - react-testing-library

		react-testing-library는 react-dom 위에서 동작. 
		실제 DOM 노드에서 작동하므로 더 신뢰할 수 있는
		테스트를 할 수 있다.





○ React 란? 왜 사용해야 하는가?

	<Reference> 
	https://yong-nyong.tistory.com/13
	https://pp-ppi.tistory.com/41
	https://velog.io/@jeromecheon/React%EB%9E%80-%ED%8A%B9%EC%A7%95%EA%B3%BC-%EC%9E%A5%EB%8B%A8%EC%A0%90-%ED%8C%8C%ED%97%A4%EC%B9%98%EA%B8%B0


	프론트엔드 라이브러리
	단순성, 빠르다, 배우기 쉽다
	재사용성이 좋다, 동시에 iOS, Android 및 웹 응용프로그램을 만들 수 있다.

	장점	
	- 배우기가 간단하고, 애플리케이션을 만들 때 복잡함이 적다.
	- Controller, directive, template, model 처럼 분리를 하지 않고 Component 단 하나로 관리한다.
	- 뛰어난 Garbage Collection, 메모리 관리, 성능을 가지고 있다.
	- 서버 사이드 렌더링과 클라이언트 렌더링을 둘 다 지원한다.
	- 간편한 UI 수정과 재사용이 용이하다.
	- 다른 프레임워크나 라이브러리와 혼용하여 사용할 수 있다. 즉, 개발이 완료된 서비스에도 적응이 가능하다.
 
	단점
	- 보여지는 부분에만 관여하기때문에 데이터 모델링, Routing, Ajax 등등의 기능을 제공하지 않는다.
	- view 외 기능들은 직접 구현하거나 라이브러리를 사용하여 구현해야 하기 때문에 JavaScript 배경지식이 부족할 경우애는 사용이 힘들다.
	- IE8 이하 버전들을 지원하지 않는다. 
	

	장점
	React 공식 문서 가이드와 방대한 커뮤니티, 자료를 통해 쉽게 접하고 배울 수 있다.
	Controller, directive, template, model, view 처럼 로직을 분리하는 것이 아닌, Component 하나로 관리를 한다. (이게 view 역할을 담당)
	성능이 뛰어난 가비지 컬랙터, 메모리 관리 기능을 지원한다.
	UI 수정과 재사용성이 좋으며, 코드 가독성을 높일 수 있다.
	다른 framework나 라이브러리와 병행해서 사용할 수 있다. 이는 개발이 이미 완료된 프로젝트에도 적절히 녹여낼 수 있는 확장성도 포함한다.

	단점
	IE8 이하 버전은 지원하지 않는다.
	view 이외의 기능은 직접 구현하거나 라이브러리를 사용해서 구현해야 하기에 javascript 배경지식이 필수 선행이다.
	데이터 모델링, 라우팅, Ajax 등 기능 지원이 안된다.
	(치명적) 로딩시간이 길다.
	웹의 궁극적 지향점과는 다소 동떨어져있다.
		a. 웹의 핵심: 모든 것을 streaming하며, 페이지들은 HTML 태그들을 내포하고 가벼운 response만 브라우징한다.
		b. 리액트: 사이트에 필요한 자바스크립트를 처음에는 공백 페이지를 띄우며 다운로드 한다. 한번 다운로드 한 이후에는 다시 리소스를 다운하지 않아도 되지만, 처음 보이는 것이 없다는 것이 streaming 과의 차이이다.


○ ReactPHP로 고성능 PHP 앱 만들기  2017.08.03

	<Reference> 
	https://edykim.com/ko/post/create-highperformance-php-apps-with-reactphp/


○  React 에서 php 를 이용해 db데이터 가져오기 / 미니멀리 2020. 8. 25. 16:22

	<Reference> 
	https://streamls.tistory.com/195


