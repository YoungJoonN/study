○ 
	<Reference> 








○ PHP 오류 및 로깅 기능
	<Reference> 
	https://www.w3schools.com/php/php_ref_error.asp



○ PHP 예제 - AJAX 설문조사

	<Reference> 
	https://www.w3schools.com/php/php_ajax_poll.asp

<html>
<head>
<script>
function getVote(int) {
  var xmlhttp=new XMLHttpRequest();
  xmlhttp.onreadystatechange=function() {
    if (this.readyState==4 && this.status==200) {
      document.getElementById("poll").innerHTML=this.responseText;
    }
  }
  xmlhttp.open("GET","poll_vote.php?vote="+int,true);
  xmlhttp.send();
}
</script>
</head>
<body>

<div id="poll">
<h3>Do you like PHP and AJAX so far?</h3>
<form>
Yes: <input type="radio" name="vote" value="0" onclick="getVote(this.value)"><br>
No: <input type="radio" name="vote" value="1" onclick="getVote(this.value)">
</form>
</div>

</body>
</html>


poll_vote.php


<?php
$vote = $_REQUEST['vote'];

//get content of textfile
$filename = "poll_result.txt";
$content = file($filename);

//put content in array
$array = explode("||", $content[0]);
$yes = $array[0];
$no = $array[1];

if ($vote == 0) {
  $yes = $yes + 1;
}
if ($vote == 1) {
  $no = $no + 1;
}

//insert votes to txt file
$insertvote = $yes."||".$no;
$fp = fopen($filename,"w");
fputs($fp,$insertvote);
fclose($fp);
?>

<h2>Result:</h2>
<table>
<tr>
<td>Yes:</td>
<td><img src="poll.gif"
width='<?php echo(100*round($yes/($no+$yes),2)); ?>'
height='20'>
<?php echo(100*round($yes/($no+$yes),2)); ?>%
</td>
</tr>
<tr>
<td>No:</td>
<td><img src="poll.gif"
width='<?php echo(100*round($no/($no+$yes),2)); ?>'
height='20'>
<?php echo(100*round($no/($no+$yes),2)); ?>%
</td>
</tr>
</table>


poll_result.txt

0||0



○ PHP OOP

	<Reference> 
	https://www.w3schools.com/php/php_oop_inheritance.asp
<?php
class Fruit {
  public $name;
  public $color;
  public function __construct($name, $color) {
    $this->name = $name;
    $this->color = $color;
  }
  public function intro() {
    echo "The fruit is {$this->name} and the color is {$this->color}.";
  }
}

// Strawberry is inherited from Fruit
class Strawberry extends Fruit {
  public function message() {
    echo "Am I a fruit or a berry? ";
  }
}
$strawberry = new Strawberry("Strawberry", "red");
$strawberry->message();
$strawberry->intro();
?>

○ PHP 양식 - 이메일 및 URL 확인

	<Reference> 
	https://www.w3schools.com/php/php_form_url_email.asp

아래 코드는 이름 필드에 문자, 대시, 아포스트로피 및 공백만 포함되어 있는지 
확인하는 간단한 방법을 보여줍니다. 이름 필드의 값이 유효하지 않으면 
오류 메시지를 저장합니다.

$name = test_input($_POST["name"]);
if (!preg_match("/^[a-zA-Z-' ]*$/",$name)) {
  $nameErr = "Only letters and white space allowed";
}

이메일 주소가 제대로 구성되었는지 확인하는 가장 쉽고 안전한 방법은 PHP의 filter_var() 함수를 사용
$email = test_input($_POST["email"]);
if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
  $emailErr = "Invalid email format";
}

URL 주소 구문이 유효한지 확인하는 방법(이 정규식은 URL에 대시도 허용합니다).
$website = test_input($_POST["website"]);
if (!preg_match("/\b(?:(?:https?|ftp):\/\/|www\.)[-a-z0-9+&@#\/%?=~_|!:,.;]*[-a-z0-9+&@#\/%=~_|]/i",$website)) {
  $websiteErr = "Invalid URL";
}


○ PHP 양식 유효성 검사

	<Reference> 
	https://www.w3schools.com/php/php_form_validation.asp


○ AJAX 소개

	<Reference> 
	https://www.w3schools.com/js/js_ajax_intro.asp

○ AJAX - XMLHttpRequest 객체

	<Reference> 
	https://www.w3schools.com/js/js_ajax_http.asp


	모든 최신 브라우저는 XMLHttpRequest개체를 지원합니다.
	객체 는 XMLHttpRequest배후에서 웹 서버와 데이터를 교환하는 데 사용할 수 있습니다. 
	즉, 전체 페이지를 다시 로드하지 않고도 웹 페이지의 일부를 업데이트할 수 있습니다.

	AJAX :  비동기 자바스크립트와 XML (Asynchronous JavaScript And XML)

○ PHP - AJAX 소개

	<Reference> 
	https://www.w3schools.com/php/php_ajax_intro.asp

	ex)
<html>
<head>
<script>
function showHint(str) {
  if (str.length == 0) {
    document.getElementById("txtHint").innerHTML = "";
    return;
  } else {
    var xmlhttp = new XMLHttpRequest();
    xmlhttp.onreadystatechange = function() {
      if (this.readyState == 4 && this.status == 200) {
        document.getElementById("txtHint").innerHTML = this.responseText;
      }
    };
    xmlhttp.open("GET", "gethint.php?q=" + str, true);
    xmlhttp.send();
  }
}
</script>
</head>
<body>

<p><b>Start typing a name in the input field below:</b></p>
<form action="">
  <label for="fname">First name:</label>
  <input type="text" id="fname" name="fname" onkeyup="showHint(this.value)">
</form>
<p>Suggestions: <span id="txtHint"></span></p>
</body>
</html>



PHP - AJAX 및 MySQL

<html>
<head>
<script>
function showUser(str) {
  if (str == "") {
    document.getElementById("txtHint").innerHTML = "";
    return;
  } else {
    var xmlhttp = new XMLHttpRequest();
    xmlhttp.onreadystatechange = function() {
      if (this.readyState == 4 && this.status == 200) {
        document.getElementById("txtHint").innerHTML = this.responseText;
      }
    };
    xmlhttp.open("GET","getuser.php?q="+str,true);
    xmlhttp.send();
  }
}
</script>
</head>
<body>

<form>
<select name="users" onchange="showUser(this.value)">
  <option value="">Select a person:</option>
  <option value="1">Peter Griffin</option>
  <option value="2">Lois Griffin</option>
  <option value="3">Joseph Swanson</option>
  <option value="4">Glenn Quagmire</option>
  </select>
</form>
<br>
<div id="txtHint"><b>Person info will be listed here...</b></div>

</body>
</html>

getuser.php

<!DOCTYPE html>
<html>
<head>
<style>
table {
  width: 100%;
  border-collapse: collapse;
}

table, td, th {
  border: 1px solid black;
  padding: 5px;
}

th {text-align: left;}
</style>
</head>
<body>

<?php
$q = intval($_GET['q']);

$con = mysqli_connect('localhost','peter','abc123','my_db');
if (!$con) {
  die('Could not connect: ' . mysqli_error($con));
}

mysqli_select_db($con,"ajax_demo");
$sql="SELECT * FROM user WHERE id = '".$q."'";
$result = mysqli_query($con,$sql);

echo "<table>
<tr>
<th>Firstname</th>
<th>Lastname</th>
<th>Age</th>
<th>Hometown</th>
<th>Job</th>
</tr>";
while($row = mysqli_fetch_array($result)) {
  echo "<tr>";
  echo "<td>" . $row['FirstName'] . "</td>";
  echo "<td>" . $row['LastName'] . "</td>";
  echo "<td>" . $row['Age'] . "</td>";
  echo "<td>" . $row['Hometown'] . "</td>";
  echo "<td>" . $row['Job'] . "</td>";
  echo "</tr>";
}
echo "</table>";
mysqli_close($con);
?>
</body>
</html>




○ PHP JSON

	<Reference> 
	https://www.w3schools.com/php/php_ref_json.asp


	PHP 5에서 디코딩은 Douglas Crockford의 JSON_checker 기반 파서에 의해 처리됩니다.
	PHP 7에는 PHP용으로 특별히 작성되고 PHP 라이선스에 따라 라이선스가 부여된 새롭고 향상된 파서가 있습니다.

	설치
	PHP 5.2.0부터 JSON 함수는 기본적으로 활성화되어 있습니다. 이러한 기능을 사용하기 위해 설치가 필요하지 않습니다.

json_decode(string, assoc, depth, options)

<?php
$jsonobj = '{"Peter":35,"Ben":37,"Joe":43}';

$obj = json_decode($jsonobj);

echo $obj->Peter;
echo $obj->Ben;
echo $obj->Joe;
?>


<?php
$jsonobj = '{"Peter":35,"Ben":37,"Joe":43}';

$arr = json_decode($jsonobj, true);

echo $arr["Peter"];
echo $arr["Ben"];
echo $arr["Joe"];
?>

json_encode(value, options, depth)

<?php
$age = array("Peter"=>35, "Ben"=>37, "Joe"=>43);

echo json_encode($age);
?>

<?php
$cars = array("Volvo", "BMW", "Toyota");

echo json_encode($cars);
?>

	

○ 2020년, PHP 언어가 가지는 의미 2020.9.4

	<Reference> 
	https://pronist.dev/58


○ PHP에서 단위테스트 시작하기
처음 PHP에서 단위테스트를 작성하는 데 도움이 되는 몇 가지 이야기입니다.
박 민규 | 2018년 08월 09일


	<Reference> 
	https://ridicorp.com/story/php-unittest/


	PHPUnit is a programmer-oriented testing framework for PHP.
	It is an instance of the xUnit architecture for unit testing frameworks.

	Test Double
		Dummy는 혼자 할 줄 아는 게 없습니다. 인자로서 전달될 뿐입니다.
		Stub은 좀 더 똑똑하지만 정해놓은 결과만 반환합니다. 
		Spy는 Stub보다 기억력이 좋습니다. 
			뭐가 호출되고 사용되어 졌는지를 기억하고 물어보면 대답해줍니다.
		Mock은 더 복잡하고 손도 많이 갑니다. 왜냐하면, 
			어떤 상황에선 이렇게 되어야 하고 다른 상황이면 저렇게 되어야 한다는 걸 
			만들어 주어야 합니다. .
		Fake는 비즈니스 로직까지 포함됩니다. 
			다른 팀과 API를 합의하고 개발이 완료될 때까지 기다리는 것이 아니라 
			Fake 개체 인터페이스에 맞춰 만들고 개발 할 수 있습니다. 
			이 대상이 API가 아니고 데이터베이스라고 해도 상관이 없습니다.


○  PHP 3분 핵심 요약집 7장. 모던 php 7.07. 유닛 테스트 WikiDocs
7.07. 유닛 테스트

	<Reference> 
	https://wikidocs.net/116975



○ 백앤드 개발자 면접 문제 은행

	<Reference> 
	https://github.com/tvandame/back-end-developer-interview-questions/blob/master/Translations/Korean/README_KR.md#phpspecific



○ 바로 시작하는 Laravel Feature Test #1
		undefcat·2021년 10월 30일

	<Reference> 
	https://velog.io/@undefcat/%EB%B0%94%EB%A1%9C-%EC%8B%9C%EC%9E%91%ED%95%98%EB%8A%94-Laravel-Feature-Test-1


